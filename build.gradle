/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'tbostelmann' at '7/20/15 12:20 PM' with Gradle 2.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'org.tbostelmann'

sourceCompatibility = 1.8
version = '1.0-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

configurations {
    deployerJars
}

repositories {
    mavenCentral()
    mavenLocal()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.slf4j:slf4j-log4j12:1.6.1'
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'io.reactivex:rxjava-math:1.0.0'
    compile 'commons-lang:commons-lang:2.6'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-math3:3.2'
    compile 'com.google.guava:guava:18.0'
    compile 'org.apache.lucene:lucene-core:5.2.1'
    compile 'org.apache.lucene:lucene-analyzers-common:5.2.1'
    compile 'org.apache.lucene:lucene-queryparser:5.2.1'

    testCompile "junit:junit:4.11"
    testCompile 'org.easymock:easymock:3.1'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.powermock:powermock-api-easymock:1.6.2'   
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Toms Search Tool',
                'Implementation-Version': version,
                'Main-Class': 'org.tbostelmann.rx.Main'
    }
    doFirst {
        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it).matching {
                    // Hack - to avoid META-INF/maven/org.antlr/antlr-runtime/pom.xml
                    // file which ends up being read only and trips everything up
                    // Hack2 - remove .RSA, .DSA, and .SF files to prevent checks on
                    // jar signature verification.
                    exclude '**/pom.xml', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
                }
            }
        }
    }
}

def hasDeploymentCredentials = hasProperty('nexusUser') && hasProperty('nexusPassword')
if(hasDeploymentCredentials) {
    uploadArchives {
        repositories.mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            configuration = configurations.deployerJars
            repository(url: 'http://nexus-master.digitalriverws.net/nexus/content/repositories/team_daas_releases') {
                authentication(userName: nexusUser, password: nexusPassword)
            }
            snapshotRepository(url: 'http://nexus-master.digitalriverws.net/nexus/content/repositories/team_daas_snapshots') {
                authentication(userName: nexusUser, password: nexusPassword)
            }
            pom {
                version = project.version
                artifactId = project.name
                groupId = project.group
                packaging = 'jar'
                project {
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'tbostelmann'
                            name 'Thomas Bostelmann'
                            email 'tbostelmann@digitalriver.com'
                            organization 'Digital River'
                        }
                        developer {
                            id 'cclark'
                            name 'Colin Clark'
                            email 'cclark@digitalriver.com'
                            organization 'Digital River'
                        }
                    }
                }
            }
        }
    }
}

uploadArchives.enabled = hasDeploymentCredentials

jar {
    manifest {
        attributes 'Implementation-Title': 'Aqueduct IO Library', 'Implementation-Version': version
    }
}
